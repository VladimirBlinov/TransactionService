version: '3'
services:
  postgresdb:
    build:
      context: ./DB
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ./DB/db-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "Transaction"]
      interval: 5s
      timeout: 5s
      start_period: 5s
      retries: 30

  migrate_dev:
    image: migrate/migrate
    depends_on:
      postgresdb:
        condition: service_healthy
    volumes:
        - ./DB/migrations:/migrations
    command: ["-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/TransactionDev?sslmode=disable", "-path", "/migrations", "up"]

  migrate_test:
    image: migrate/migrate
    depends_on:
      postgresdb:
        condition: service_healthy
    volumes:
        - ./DB/migrations:/migrations
    command: ["-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/TransactionTest?sslmode=disable", "-path", "/migrations", "up"]

  migrate_prod:
    image: migrate/migrate
    depends_on:
      postgresdb:
        condition: service_healthy
    volumes:
        - ./DB/migrations:/migrations
    command: ["-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/Transaction?sslmode=disable", "-path", "/migrations", "up"]
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
     - ./Rabbit/data/:/var/lib/rabbitmq/mnesia/
    restart: always

  # apiserver:
  #   build:
  #     context: ./Backend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./:/usr/src/app
  #   depends_on:
  #     - migrate_prod
  #     - rabbitmq
  #   ports:
  #     - "8080:8080"

  # worker:
  #   build:
  #     context: ./Backend
  #     dockerfile: Dockerfile.worker
  #   volumes:
  #     - ./:/usr/src/app
  #   depends_on:
  #     - migrate_prod
  #     - rabbitmq

  # nginx:
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - apiserver
  #     - worker
  #   ports:
  #     - "80:80"

volumes:
  db_data: